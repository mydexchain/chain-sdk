syntax = "proto3";
package dex.vesting.v0;

import "gogoproto/gogo.proto";
import "dex/base/v0/coin.proto";
import "dex/auth/v0/auth.proto";

option go_package = "github.com/mydexchain/chain-sdk/x/auth/vesting/types";

// BaseVestingAccount implements the VestingAccount interface. It contains all
// the necessary fields needed for any vesting account implementation.
message BaseVestingAccount {
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = false;

  dex.auth.v0.BaseAccount base_account       = 1 [(gogoproto.embed) = true];
  repeated dex.base.v0.Coin original_vesting = 2 [
    (gogoproto.nullable)     = false,
    (gogoproto.castrepeated) = "github.com/mydexchain/chain-sdk/types.Coins",
    (gogoproto.moretags)     = "yaml:\"original_vesting\""
  ];
  repeated dex.base.v0.Coin delegated_free = 3 [
    (gogoproto.nullable)     = false,
    (gogoproto.castrepeated) = "github.com/mydexchain/chain-sdk/types.Coins",
    (gogoproto.moretags)     = "yaml:\"delegated_free\""
  ];
  repeated dex.base.v0.Coin delegated_vesting = 4 [
    (gogoproto.nullable)     = false,
    (gogoproto.castrepeated) = "github.com/mydexchain/chain-sdk/types.Coins",
    (gogoproto.moretags)     = "yaml:\"delegated_vesting\""
  ];
  int64 end_time = 5 [(gogoproto.moretags) = "yaml:\"end_time\""];
}

// ContinuousVestingAccount implements the VestingAccount interface. It
// continuously vests by unlocking coins linearly with respect to time.
message ContinuousVestingAccount {
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = false;

  BaseVestingAccount base_vesting_account = 1 [(gogoproto.embed) = true];
  int64              start_time           = 2 [(gogoproto.moretags) = "yaml:\"start_time\""];
}

// DelayedVestingAccount implements the VestingAccount interface. It vests all
// coins after a specific time, but non prior. In other words, it keeps them
// locked until a specified time.
message DelayedVestingAccount {
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = false;

  BaseVestingAccount base_vesting_account = 1 [(gogoproto.embed) = true];
}

// Period defines a length of time and amount of coins that will vest.
message Period {
  option (gogoproto.goproto_stringer) = false;

  int64    length                          = 1;
  repeated dex.base.v0.Coin amount = 2
      [(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/mydexchain/chain-sdk/types.Coins"];
}

// PeriodicVestingAccount implements the VestingAccount interface. It
// periodically vests by unlocking coins during each specified period.
message PeriodicVestingAccount {
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = false;

  BaseVestingAccount base_vesting_account = 1 [(gogoproto.embed) = true];
  int64              start_time           = 2 [(gogoproto.moretags) = "yaml:\"start_time\""];
  repeated Period vesting_periods = 3 [(gogoproto.moretags) = "yaml:\"vesting_periods\"", (gogoproto.nullable) = false];
}
